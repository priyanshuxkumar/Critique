// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  avatar        String?
  email         String         @unique
  password      String
  emailVerified Boolean        @default(false)
  createdAt     DateTime       @default(now())
  reviews       Review[]
  reviewUpvotes ReviewUpvote[]
}

model Website {
  id          String   @id @default(uuid())
  name        String
  websiteUrl  String
  iconUrl     String?
  description String
  createdAt   DateTime @default(now())

  reviews Review[]
}

model Review {
  id       String  @id @default(uuid())
  content  String
  rating   Int
  videoUrl String?
  userId   Int
  user     User    @relation(fields: [userId], references: [id])

  websiteId String
  website   Website        @relation(fields: [websiteId], references: [id])
  createdAt DateTime       @default(now())
  upvotes   ReviewUpvote[]

  @@unique([userId, websiteId])
}

model ReviewUpvote {
  id     String @id @default(uuid())
  userId Int
  user   User   @relation(fields: [userId], references: [id])

  reviewId String
  review   Review @relation(fields: [reviewId], references: [id])

  @@unique([userId, reviewId])
}
